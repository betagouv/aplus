package views.emails

import constants.Constants
import helper.Time
import java.time.{ZoneId, ZonedDateTime}
import models._
import scalatags.Text.all._
import views.helpers.common.contactLink

object common {

  def renderEmail(inner: List[Modifier]): String =
    "<!DOCTYPE html>" + html(
      head(
        meta(
          name := "viewport",
          content := "width=device-width"
        ),
        meta(
          httpEquiv := "Content-Type",
          content := "text/html; charset=UTF-8"
        )
      ),
      body(
        inner: _*
      )
    )

  val magicLinkSubject = "Connexion sÃ©curisÃ©e Ã  Administration+"

  def magicLinkBody(
      userName: Option[String],
      userTimeZone: ZoneId,
      loginToken: LoginToken,
      absoluteUrl: String,
      pathToRedirectTo: String,
      tokenExpirationInMinutes: Int
  ): List[Modifier] = {
    val url = s"$absoluteUrl?token=${loginToken.token}&path=$pathToRedirectTo"
    List[Modifier](
      s"${userName.filter(_.nonEmpty).map(n => s"Bonjour $n,").getOrElse("Bonjour,")}",
      br,
      br,
      p(
        "Vous pouvez maintenant accÃ©der au service Administration+ en cliquant sur le lien suivantÂ : ",
        br,
        a(href := raw(url).render, raw(url)),
        br,
        br,
        " ",
        "Ce lien est Ã  ",
        b("usage unique"),
        " et est ",
        b(s"valide $tokenExpirationInMinutes minutes"),
        ", donc Ã  utiliser ",
        b(
          "avant ",
          ZonedDateTime
            .now(userTimeZone)
            .plusMinutes(tokenExpirationInMinutes.toLong)
            .format(Time.hourAndMinutesFormatter)
        ),
        ".",
        br,
        br,
        "Un bug rÃ©cent peut provoquer un double clic sur notre lien de connexion, ce qui invalide le jeton de connexion unique.",
        br,
        "Si vous rencontrez ce problÃ¨me, veuillez essayer lâ€™une des solutions suivantes :",
        br,
        "- Copiez-collez le lien directement dans la barre dâ€™adresse de votre navigateur.",
        br,
        "- Faites un clic droit sur le lien et sÃ©lectionnez Â« Ouvrir dans un nouvel onglet Â».",
        br,
        "- Utilisez CTRL + Clic sur le lien pour le mÃªme rÃ©sultat.",
        br,
        br,
        "Si vous avez des questions ou vous rencontrez un problÃ¨me, ",
        "nâ€™hÃ©sitez pas Ã  ",
        contactLink("contacter lâ€™Ã©quipe A+"),
        br,
        " ",
        "Equipe Administration+"
      )
    ) ::: commonEmailFooter
  }

  val passwordReinitializationSubject = "RÃ©initialisation du mot de passe Administration+"

  def passwordReinitializationBody(
      userName: Option[String],
      userTimeZone: ZoneId,
      absoluteUrl: String,
      expirationDate: ZonedDateTime,
  ): List[Modifier] =
    List[Modifier](
      s"${userName.filter(_.nonEmpty).map(n => s"Bonjour $n,").getOrElse("Bonjour,")}",
      br,
      br,
      p(
        "Une demande de rÃ©initialisation de mot de passe a Ã©tÃ© faite pour " +
          "votre compte Administration+. Pour terminer la procÃ©dure, " +
          "veuillez cliquer sur le lien suivantÂ : ",
        br,
        a(href := raw(absoluteUrl).render, raw(absoluteUrl)),
        br,
        br,
        " ",
        "Ce lien est valide jusquâ€™Ã  ",
        b(expirationDate.format(Time.hourAndMinutesFormatter)),
        ".",
        br,
        br,
        "Si vous nâ€™avez pas effectuÃ© de demande de rÃ©initialisation de mot de passe, ",
        "vous pouvez ignorer cet email.",
        br,
        " ",
        "Equipe Administration+"
      )
    ) ::: commonEmailFooter

  val userInactivityReminderSubject = "[A+] Votre compte Administration+ est inactif"

  def userInactivityReminderBody(
      userName: Option[String],
      url: String,
      numberOfMonths: Int
  ): List[Modifier] =
    List[Modifier](
      s"${userName.filter(_.nonEmpty).map(n => s"Bonjour $n,").getOrElse("Bonjour,")}",
      br,
      br,
      p(
        s"Votre compte sur la plateforme Administration+ est inactif depuis plus de $numberOfMonths mois.",
        br,
        br,
        "Il est possible que certaines demandes en cours soient encore associÃ©es Ã  votre profil.",
        br,
        "Si vous souhaitez les consulter ou continuer Ã  utiliser la plateforme, nous vous invitons Ã  vous reconnecter dans les 30 prochains jours, Ã  lâ€™adresse suivante : ",
        br,
        br,
        a(href := url, url),
        " ",
        br,
        br,
        "Cette nouvelle connexion est nÃ©cessaire pour Ã©viter la suppression automatique de votre compte.",
        br,
        br,
        "Si vous ne prÃ©voyez plus dâ€™utiliser Administration+, vous pouvez simplement nous transmettre lâ€™adresse e-mail de votre remplaÃ§ant, afin de garantir la continuitÃ© du suivi des dossiers.",
        br,
        br,
        "Nous restons Ã  votre disposition pour toute question,",
        br,
        br,
        "Lâ€™Ã©quipe Administration+"
      )
    ) ::: commonEmailFooter

  val userInactivityDeactivationSubject = "[A+] Suppression de votre compte Administration+"

  def userInactivityDeactivationBody(
      userName: Option[String],
  ): List[Modifier] =
    List[Modifier](
      s"${userName.filter(_.nonEmpty).map(n => s"Bonjour $n,").getOrElse("Bonjour,")}",
      br,
      br,
      p(
        "Votre compte a Ã©tÃ© supprimÃ© de la base dâ€™utilisateurs dâ€™Administration+.",
        br,
        br,
        "Il nâ€™est dÃ©sormais plus possible de recevoir ou de formuler de demandes via la plateforme.",
        br,
        br,
        "ðŸ”„Â En cas dâ€™erreur, tout membre de votre Ã©quipe peut rÃ©activer votre compte Ã  tout moment depuis la pageÂ ",
        a(
          href := "https://docs.aplus.beta.gouv.fr/guides-et-tutoriels/responsable-de-groupe",
          "Â« Mes groupes Â»"
        ),
        ". ",
        br,
        br,
        "ðŸ‘¤Â Si vous connaissez votre remplaÃ§ant, nâ€™hÃ©sitez pas Ã  nous transmettre ses coordonnÃ©es afin que nous puissions lui crÃ©er un compte. Le responsable de votre groupe peut Ã©galement effectuer cette dÃ©marche depuis la mÃªme page.",
        br,
        br,
        "Si vous avez la moindre question, nâ€™hÃ©sitez pas Ã  nous contacter via lâ€™adresse ",
        a(href := s"mailto:${Constants.supportEmail}", Constants.supportEmail),
        ". ",
        br,
        br,
        "Bien cordialement,",
        br,
        br,
        "Lâ€™Ã©quipe Administration+"
      )
    ) ::: commonEmailFooter

  val mandatV2Subject = "[A+] Mandat crÃ©Ã©"

  def mandatV2Body(absoluteUrl: String): List[Modifier] =
    List[Modifier](
      span(
        "Vous avez gÃ©nÃ©rÃ© un nouveau mandat. ",
        "Il est accessible, aprÃ¨s connexion, sur Administration+ en cliquant sur ce lien : ",
        a(href := absoluteUrl, absoluteUrl)
      )
    ) ::: commonEmailFooter

  val mandatSmsSentSubject = "[A+] Mandat initiÃ© par SMS"

  def mandatSmsSentBody(absoluteUrl: String): List[Modifier] =
    List[Modifier](
      span(
        "Le SMS a bien Ã©tÃ© envoyÃ©Â ! Vous recevrez un e-mail dÃ¨s que lâ€™usager aura rÃ©pondu. ",
        "Vous pouvez suivre lâ€™Ã©change en cliquant sur ce lien : ",
        a(href := absoluteUrl, absoluteUrl)
      )
    ) ::: commonEmailFooter

  val mandatSmsClosedSubject = "[A+] Vous avez reÃ§u une rÃ©ponse par SMS Ã  votre mandat"

  def mandatSmsClosedBody(absoluteUrl: String): List[Modifier] =
    List[Modifier](
      span(
        "Lâ€™usager a rÃ©pondu par SMS au mandat. ",
        "Lâ€™Ã©change SMS est disponible en cliquant sur ce lien : ",
        a(href := absoluteUrl, absoluteUrl)
      )
    ) ::: commonEmailFooter

  val fileQuarantinedSubject =
    "[A+] Un virus a Ã©tÃ© dÃ©tectÃ© dans votre fichier envoyÃ© sur Administration+"

  def fileQuarantinedBody(absoluteUrl: String): List[Modifier] =
    List[Modifier](
      span(
        "Notre antivirus a scannÃ© le fichier que vous avez rÃ©cemment envoyÃ© sur la demande ",
        a(href := absoluteUrl, target := "_blank", rel := "noopener", absoluteUrl),
        " et a dÃ©tectÃ© un virus. ",
        br,
        br,
        span(
          style := "color: red; font-weight: 800",
          "Il est fortement recommandÃ© de passer un antivirus sur votre poste de travail. "
        ),
        br,
        br,
        "Il peut cependant sâ€™agir dâ€™un faux positif. ",
        "Vous pouvez joindre le document dans autre format (jpeg, etc.) sur le site Administration+ ",
        "en utilisant le formulaire de rÃ©ponse Ã  la demande ",
        a(href := absoluteUrl, target := "_blank", rel := "noopener", absoluteUrl),
        " ."
      )
    ) ::: commonEmailFooter

  val fileErrorSubject =
    "[A+] Erreur lors de lâ€™enregistrement de votre fichier"

  def fileErrorBody(absoluteUrl: String): List[Modifier] =
    List[Modifier](
      span(
        "Une erreur sâ€™est produite lors de votre envoi rÃ©cent de fichier sur la demande ",
        a(href := absoluteUrl, target := "_blank", rel := "noopener", absoluteUrl),
        " . ",
        br,
        br,
        "Administration+ nâ€™a pas Ã©tÃ© en mesure de sauvegarder le fichier. ",
        br,
        br,
        "Lâ€™erreur est probablement temporaire. ",
        "Il est possible dâ€™envoyer Ã  nouveau le fichier ",
        "en utilisant le formulaire de rÃ©ponse Ã  la demande ",
        a(href := absoluteUrl, target := "_blank", rel := "noopener", absoluteUrl),
        " ."
      )
    ) ::: commonEmailFooter

  def invitationBody(
      application: Application,
      answer: Option[Answer],
      invitedUser: User,
      absoluteUrl: String
  ): List[Modifier] = {
    val url =
      s"$absoluteUrl?key=${invitedUser.key}"
    List[Modifier](
      s"Bonjour ${invitedUser.name},",
      br,
      br,
      p(
        answer.map(_.creatorUserName).getOrElse[String](application.creatorUserName),
        " a besoin de vous.",
        br,
        "Cette personne vous a invitÃ© sur la demande suivante : ",
        application.subject,
        br,
        "Vous pouvez voir la demande et y rÃ©pondre en suivant ce lien : ",
        br,
        a(
          href := url,
          url
        ),
        br
      )
    ) ::: applicationEmailFooter
  }

  def answerBody(
      application: Application,
      answer: Answer,
      user: User,
      absoluteUrl: String
  ): List[Modifier] = {
    val url =
      s"$absoluteUrl?key=${user.key}#answer-${answer.id}"
    val irrelevantDefaultText: List[Modifier] =
      if (answer.declareApplicationHasIrrelevant)
        List[Modifier](
          answer.creatorUserName.split('(').headOption.getOrElse[String]("L'agent"),
          " a indiquÃ© qu'",
          b("il existe une procÃ©dure standard que vous pouvez utiliser pour cette demande"),
          " vous aurez plus de dÃ©tails dans sa rÃ©ponse.",
          br,
          br
        )
      else
        Nil
    List[Modifier](
      s"Bonjour ${user.name},",
      br,
      br,
      p(
        answer.creatorUserName,
        " a donnÃ© une rÃ©ponse sur la demande : ",
        application.subject,
        br,
        irrelevantDefaultText,
        "Vous pouvez consulter la rÃ©ponse, y rÃ©pondre ou la clÃ´turer en suivant le lien suivant : ",
        br,
        a(
          href := url,
          url
        )
      )
    ) ::: applicationEmailFooter
  }

  val weeklyEmailSubject = "[A+] Votre rÃ©capitulatif hebdomadaire"

  def weeklyEmailBody(
      infos: WeeklyEmailInfos,
      applicationAbsoluteUrl: Application => String,
      daySinceLastAgentAnswerForApplicationsThatShouldBeClosed: Int
  ): List[Modifier] = {
    val datePattern = "EEEE dd MMMM YYYY HH'h'mm"
    List[Modifier](
      s"Bonjour ${infos.user.name},",
      br,
      br,
      p(
        s"Vous avez ${infos.applicationsThatShouldBeClosed.size} ",
        if (infos.applicationsThatShouldBeClosed.size <= 1) "demande qui a reÃ§u une rÃ©ponse il y a "
        else "demandes qui ont reÃ§u une rÃ©ponse il y a ",
        s"plus de $daySinceLastAgentAnswerForApplicationsThatShouldBeClosed jours. ",
        "Si votre Ã©change est terminÃ©, nâ€™hÃ©sitez pas Ã  ",
        if (infos.applicationsThatShouldBeClosed.size <= 1) "lâ€™archiver, " else "les archiver, ",
        """en appuyant sur le bouton Â« Archiver lâ€™Ã©change Â»."""
      ),
      ul(
        infos.applicationsThatShouldBeClosed.map(application =>
          li(
            a(
              href := applicationAbsoluteUrl(application),
              s"Demande du ${Time.formatPatternFr(application.creationDate, datePattern)}"
            )
          )
        )
      ),
      br,
      br,
      p(
        i(
          "Si vous avez un problÃ¨me ou besoin dâ€™aide Ã  propos de lâ€™outil, ",
          contactLink("contactez lâ€™Ã©quipe A+"),
        )
      )
    )
  }

  private def applicationEmailFooter: List[Modifier] =
    List(
      br,
      br,
      b("Ne transfÃ©rez pas cet email et nâ€™y rÃ©pondez pas directement."),
      br,
      i(
        "- Vous pouvez transfÃ©rer la demande Ã  un autre utilisateur dans lâ€™outil Administration+ en ouvrant le lien ci-dessus",
        br,
        "- Si vous avez un problÃ¨me ou besoin dâ€™aide Ã  propos de lâ€™outil, ",
        contactLink("contactez lâ€™Ã©quipe A+"),
        br,
        "- Le navigateur Internet Explorer peut rencontrer des difficultÃ©s Ã  accÃ©der au site. Microsoft conseille depuis fÃ©vrier 2019 de ne plus utiliser son navigateur historique qui nâ€™est plus mis Ã  jour depuis la sortie de Edge en 2015 et ne supporte donc plus les standards actuels du Web. ",
        a(
          href := "https://docs.aplus.beta.gouv.fr/faq/questions-frequentes-pour-tous-les-profils/pourquoi-ne-plus-utiliser-le-navigateur-internet-explorer-de-microsoft",
          "Pour en savoir plus"
        )
      )
    )

  private def commonEmailFooter: List[Modifier] =
    List(
      br,
      br,
      b("Ne transfÃ©rez pas cet email et nâ€™y rÃ©pondez pas directement."),
      br,
      i(
        "- Si vous avez un problÃ¨me ou besoin dâ€™aide Ã  propos de lâ€™outil, ",
        contactLink("contactez lâ€™Ã©quipe A+"),
        br,
        " ",
        "- Le navigateur Internet Explorer peut rencontrer des difficultÃ©s Ã  accÃ©der au site. Microsoft conseille depuis fÃ©vrier 2019 de ne plus utiliser son navigateur historique qui nâ€™est plus mis Ã  jour depuis la sortie de Edge en 2015 et ne supporte donc plus les standards actuels du Web. ",
        a(
          href := "https://docs.aplus.beta.gouv.fr/faq/questions-frequentes-pour-tous-les-profils/pourquoi-ne-plus-utiliser-le-navigateur-internet-explorer-de-microsoft",
          " ",
          "Pour en savoir plus"
        )
      )
    )

}
