package models

import java.util.UUID

import extentions.UUIDHelper

case class Area(id: UUID, name: String)

object Area {
  def fromId(id: UUID) = if (id == allArea.id) {
    Some(allArea)
  } else {
    all.find(_.id == id)
  }

  def apply(id: String, name: String): Area = Area(UUIDHelper.namedFrom(id), name)

  val all = List(
    Area("Ain", "Ain"),
    Area("Aisne", "Aisne"),
    Area("Allier", "Allier"),
    Area("nice", "Alpes-Maritimes (06)"),
    Area("Alpes-de-Haute-Provence", "Alpes-de-Haute-Provence"),
    Area("ardennes", "Ardennes (08)"),
    Area("Ardèche", "Ardèche"),
    Area("Ariège", "Ariège"),
    Area("Aube", "Aube"),
    Area("Aude", "Aude"),
    Area("Aveyron", "Aveyron"),
    Area("Bas-Rhin", "Bas-Rhin"),
    Area("bouches-du-rhone", "Bouches-du-Rhône (13)"),
    Area("calvados", "Calvados (14)"),
    Area("Cantal", "Cantal"),
    Area("Charente", "Charente"),
    Area("Charente-Maritime", "Charente-Maritime"),
    Area("Cher", "Cher"),
    Area("Corrèze", "Corrèze"),
    Area("Corse", "Corse"),
    Area("Corse-du-Sud", "Corse-du-Sud"),
    Area("Creuse", "Creuse"),
    Area("Côte-d'Or", "Côte-d'Or"),
    Area("Côtes-d'Armor", "Côtes-d'Armor"),
    Area("Deux-Sèvres", "Deux-Sèvres"),
    Area("dordogne", "Dordogne (24)"),
    Area("doubs", "Doubs (25)"),
    Area("Drôme", "Drôme"),
    Area("essonne", "Essonne (91)"),
    Area("Eure", "Eure"),
    Area("Eure-et-Loir", "Eure-et-Loir"),
    Area("Finistère", "Finistère"),
    Area("Gard", "Gard"),
    Area("Gers", "Gers"),
    Area("Gironde", "Gironde"),
    Area("Guadeloupe", "Guadeloupe"),
    Area("Guyane", "Guyane"),
    Area("Haut-Rhin", "Haut-Rhin"),
    Area("Haute-Corse", "Haute-Corse"),
    Area("Haute-Garonne", "Haute-Garonne"),
    Area("Haute-Loire", "Haute-Loire"),
    Area("Haute-Marne", "Haute-Marne"),
    Area("Haute-Savoie", "Haute-Savoie"),
    Area("Haute-Saône", "Haute-Saône"),
    Area("Haute-Vienne", "Haute-Vienne"),
    Area("Hautes-Alpes", "Hautes-Alpes"),
    Area("hautes-pyrénées", "Hautes-Pyrénées (65)"),
    Area("hauts-de-seine", "Hauts-de-Seine (92)"),
    Area("Hérault", "Hérault"),
    Area("ille-et-vilaine", "Ille-et-Vilaine (35)"),
    Area("Indre", "Indre"),
    Area("Indre-et-Loire", "Indre-et-Loire"),
    Area("Isère", "Isère"),
    Area("jura", "Jura (39)"),
    Area("La Réunion", "La Réunion"),
    Area("Landes", "Landes"),
    Area("loir-et-cher", "Loir-et-Cher (41)"),
    Area("Loire", "Loire"),
    Area("Loire-Atlantique", "Loire-Atlantique"),
    Area("Loiret", "Loiret"),
    Area("cahors", "Lot (46)"),
    Area("Lot-et-Garonne", "Lot-et-Garonne"),
    Area("Lozère", "Lozère"),
    Area("maine-et-loire", "Maine-et-loire (49)"),
    Area("Manche", "Manche"),
    Area("Marne", "Marne"),
    Area("Martinique", "Martinique"),
    Area("Mayenne", "Mayenne"),
    Area("Mayotte", "Mayotte"),
    Area("Meurthe-et-Moselle", "Meurthe-et-Moselle"),
    Area("Meuse", "Meuse"),
    Area("Morbihan", "Morbihan"),
    Area("Moselle", "Moselle"),
    Area("Nièvre", "Nièvre"),
    Area("Nord", "Nord"),
    Area("Oise", "Oise"),
    Area("coeur-du-perche", "Orne (61)"),
    Area("paris", "Paris (75)"),
    Area("bethune", "Pas-de-Calais (62)"),
    Area("Puy-de-Dôme", "Puy-de-Dôme"),
    Area("Pyrénées-Atlantiques", "Pyrénées-Atlantiques"),
    Area("Pyrénées-Orientales", "Pyrénées-Orientales"),
    Area("lyon", "Rhônes (69)"),
    Area("Sarthe", "Sarthe"),
    Area("Savoie", "Savoie"),
    Area("Saône-et-Loire", "Saône-et-Loire"),
    Area("Seine-Maritime", "Seine-Maritime"),
    Area("seine-saint-denis", "Seine-Saint-Denis (93)"),
    Area("Seine-et-Marne", "Seine-et-Marne"),
    Area("Somme", "Somme"),
    Area("Tarn", "Tarn"),
    Area("Tarn-et-Garonne", "Tarn-et-Garonne"),
    Area("Territoire de Belfort", "Territoire de Belfort"),
    Area("argenteuil", "Val-d'Oise (95)"),
    Area("val-de-marne", "Val-de-Marne (94)"),
    Area("var", "Var (83)"),
    Area("vaucluse", "Vaucluse (84)"),
    Area("vendee", "Vendée (85)"),
    Area("Vienne", "Vienne"),
    Area("Vosges", "Vosges"),
    Area("Yonne", "Yonne"),
    Area("Yvelines", "Yvelines"),
    Area("exemple", "Demo")
  )
  val allArea = Area(UUIDHelper.namedFrom("all"), "tous les territoires")

  val notApplicable = Area("notApplicable", "NotApplicable")
}
